<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
        <property name="properties">
            <props>
                <prop key="Oracle">oracle</prop>
                <prop key="MySQL">mysql</prop>
                <prop key="DB2">db2</prop>
                <prop key="SQL Server">sqlserver</prop>
                <prop key="SQLite">sqlite</prop>
            </props>
        </property>
    </bean>

    <!-- 配置数据源 -->
    <bean id="shardManager" class="com.dcits.galaxy.dal.mybatis.shard.ShardManager">
        <property name="shards">
            <set>
                <ref bean="shardUpright"/>
                <ref bean="shardLevel1"/>
                <ref bean="shardLevel2"/>
            </set>
        </property>
        <property name="defaultShard" ref="shardUpright"/>
    </bean>

    <bean id="shardUpright" class="com.dcits.galaxy.dal.mybatis.shard.Shard">
        <property name="id" value="partition0"/>
        <property name="dataSource" ref="dataSource0"/>
    </bean>

    <bean id="shardLevel1" class="com.dcits.galaxy.dal.mybatis.shard.Shard">
        <property name="id" value="partition1"/>
        <property name="dataSource" ref="dataSource1"/>
    </bean>
    <bean id="shardLevel2" class="com.dcits.galaxy.dal.mybatis.shard.Shard">
        <property name="id" value="partition2"/>
        <property name="dataSource" ref="dataSource2"/>
    </bean>

    <bean id="dataSource0" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${db0.jdbcUrl}"/>
        <property name="username" value="${db0.username}"/>
        <property name="password" value="${db0.password}"/>
        <property name="initialSize" value="${db.pool.initialSize}"/>
        <property name="maxActive" value="${db.pool.maxActive}"/>
        <property name="minIdle" value="${db.pool.minIdle}"/>
        <property name="poolPreparedStatements" value="${db.pool.poolPreparedStatements}"/>
        <property name="maxOpenPreparedStatements" value="${db.pool.maxOpenPreparedStatements}"/>
        <property name="validationQuery" value="${db.pool.validationQuery}"/>
        <property name="testOnBorrow" value="${db.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${db.pool.testOnReturn}"/>
        <property name="testWhileIdle" value="${db.pool.testWhileIdle}"/>
        <property name="filters" value="${db.pool.filters}"/>
        <property name="connectionProperties" value="config.decrypt=false"/>
    </bean>

    <!-- 数据源1 -->
    <bean id="dataSource1" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${db1.jdbcUrl}"/>
        <property name="username" value="${db1.username}"/>
        <property name="password" value="${db1.password}"/>
        <property name="initialSize" value="${db.pool.initialSize}"/>
        <property name="maxActive" value="${db.pool.maxActive}"/>
        <property name="minIdle" value="${db.pool.minIdle}"/>
        <property name="poolPreparedStatements" value="${db.pool.poolPreparedStatements}"/>
        <property name="maxOpenPreparedStatements" value="${db.pool.maxOpenPreparedStatements}"/>
        <property name="validationQuery" value="${db.pool.validationQuery}"/>
        <property name="testOnBorrow" value="${db.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${db.pool.testOnReturn}"/>
        <property name="testWhileIdle" value="${db.pool.testWhileIdle}"/>
        <property name="filters" value="${db.pool.filters}"/>
        <property name="connectionProperties" value="config.decrypt=false"/>
    </bean>
    <!-- 数据源2 -->
    <bean id="dataSource2" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${db2.jdbcUrl}"/>
        <property name="username" value="${db2.username}"/>
        <property name="password" value="${db2.password}"/>
        <property name="initialSize" value="${db.pool.initialSize}"/>
        <property name="maxActive" value="${db.pool.maxActive}"/>
        <property name="minIdle" value="${db.pool.minIdle}"/>
        <property name="poolPreparedStatements" value="${db.pool.poolPreparedStatements}"/>
        <property name="maxOpenPreparedStatements" value="${db.pool.maxOpenPreparedStatements}"/>
        <property name="validationQuery" value="${db.pool.validationQuery}"/>
        <property name="testOnBorrow" value="${db.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${db.pool.testOnReturn}"/>
        <property name="testWhileIdle" value="${db.pool.testWhileIdle}"/>
        <property name="filters" value="${db.pool.filters}"/>
        <property name="connectionProperties" value="config.decrypt=false"/>
    </bean>

    <!-- 路由函数配置 -->
    <bean id="hashFunction" class="com.dcits.galaxy.dal.route.HashFunction"></bean>
    <!-- 按月份路由 -->
    <bean id="monthRouter" class="com.dcits.galaxy.dal.route.HashFunction"></bean>
    <!-- 按时间段路由 -->
    <bean id="timeRouter" class="com.dcits.galaxy.dal.route.HashFunction">
        <!-- <property name="pattern" value="yyyy-MM-dd HH:mm:ss" /> -->
    </bean>

    <!-- 配置路由规则开始 -->
    <bean id="internalRouter"
          class="com.dcits.galaxy.dal.mybatis.router.config.SimpleRouterXmlFactoryBean">
        <!-- functionsMap是在使用自定义路由规则函数的时候使用 -->
        <property name="functionsMap">
            <map>
                <entry key="hash" value-ref="hashFunction"></entry>
            </map>
        </property>
        <property name="configLocations" value="classpath*:META-INF/routing-rules/**/*.xml"/>
        <property name="shardManager" ref="shardManager" />
    </bean>
    <!-- 配置路由规则结束 -->
    <!-- 查询处理规则工厂 -->
    <bean id="mergeRulesFactory"
          class="com.dcits.galaxy.dal.mybatis.merger.config.MergeRulesFactoryBean">
        <property name="locations" value="classpath*:META-INF/merge-rules/**/*.xml"/>
    </bean>
    <bean id="mergeExecutor" class="com.dcits.galaxy.dal.mybatis.merger.MergeExecutor" >
        <property name="mergeRulesFactoryBean" ref="mergeRulesFactory" />
    </bean>

    <!-- 聚合处理 -->
    <bean id="aggregateMerger" class="com.dcits.galaxy.dal.mybatis.merger.aggregate.AggregateMerger" />
    <!-- 排序处理 -->
    <bean id="orderByMerger" class="com.dcits.galaxy.dal.mybatis.merger.orderby.OrderByMerger" />

    <bean id="proactorExecutor" class="com.dcits.galaxy.dal.mybatis.proactor.ProactorExecutor" >
        <property name="mergeRulesFactoryBean" ref="mergeRulesFactory" />
    </bean>
    <!-- 分页处理 -->
    <bean id="pageProactor" class="com.dcits.galaxy.dal.mybatis.proactor.page.PageProactor" >
        <!-- 当分页查询,启用内存分页的offset的值  -->
        <property name="memoryPageOffset" value="10000" />
        <!-- 分页查询时，最大 条数限制  -->
        <property name="maxLimit" value="10000" />
    </bean>

    <!-- 事务配置 -->
    <bean id="transactionManager"
          class="com.dcits.galaxy.dal.mybatis.transaction.MultiDataSourceTransactionManager">
    </bean>
    <!-- 配置基于注解的事物管理 -->
    <tx:annotation-driven transaction-manager="transactionManager"
                          proxy-target-class="true"/>

    <bean id="transactionFactory"
          class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory">
        <property name="properties">
            <props>
                <prop key="closeConnection">false</prop>
            </props>
        </property>
    </bean>

    <!-- 集成mybatis，统一在此加载，对业务开发而言约定：其配置文件在各个jar包中的/META-INF/mapper/**/*.xml -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource0"/>
        <property name="databaseIdProvider" ref="databaseIdProvider"/>
        <property name="transactionFactory" ref="transactionFactory"/>
        <property name="configLocation"
                  value="classpath:META-INF/mybatis/mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:META-INF/mapper/**/*.xml"/>
        <property name="typeAliasesPackage" value="${typeAliasesPackage}"/>
    </bean>

    <!-- 配置ShardSqlSessionTemplate；分区表操作必须使用此对象-->
    <bean id="shardSqlSessionTemplate" class="com.dcits.galaxy.dal.mybatis.ShardSqlSessionTemplate"
          init-method="init">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <property name="shardManager" ref="shardManager"/>
        <property name="router" ref="internalRouter"/>
        <property name="mergeExecutor" ref="mergeExecutor"/>
        <property name="proactorExecutor" ref="proactorExecutor"/>
        <property name="idempotentUtil" ref="idempotentUtil"/>
    </bean>

    <!-- 幂等服务 -->
    <bean id="idempotentDao" class="com.dcits.galaxy.dal.mybatis.idempotent.dao.impl.IdempotentDaoImpl"></bean>

    <bean id="idempotentService" class="com.dcits.galaxy.dal.mybatis.idempotent.service.impl.IdempotentServiceImpl">
        <property name="idempotentDao" ref="idempotentDao"/>
    </bean>

    <bean id="idempotentUtil" class="com.dcits.galaxy.dal.mybatis.idempotent.IdempotentUtil">
        <property name="idempotentService" ref="idempotentService"/>
        <property name="checkFristShard" value="false"/>
    </bean>
</beans>