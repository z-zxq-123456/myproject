<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dcits.galaxy.dal.demo.entities.User" >

	<insert id="insert" parameterType="User">
		INSERT INTO USER (sid , user_name , group_name , age, remark)
		VALUES( #{sid} , #{userName} , #{groupName} , #{age}, #{remark}) 
	</insert>

	<insert id="insertBatch" parameterType="User">
		INSERT INTO USER (sid , user_name , group_name , age, remark)
		VALUES
		<foreach item="item" index="index" collection="list" open=""
			separator="," close="">
			(#{item.sid} , #{item.userName} , #{item.groupName} , #{item.age},
			#{item.remark})
		</foreach>
	</insert>
	
	<update id="update" parameterType="User">
		UPDATE USER
		<set>
			<if test="remark!=null">
				remark = #{remark}
			</if>
		</set>
		WHERE sid = #{sid}
	</update>
	
	<delete id="delete" parameterType="User">
		DELETE FROM USER WHERE sid = #{sid}
	</delete>

	<select id="findMax" resultType="User" parameterType="User">
		select max(sid) as sid from user
	</select>
	
	<select id="get" resultType="User" parameterType="User">
		select * from user where sid = #{sid}
		<if test="userName != null">
			and user_name = #{userName}
		</if>
	</select>
	
	
	
	<!-- 
	<select id="findAll" resultType="User" parameterType="User">
		select * from user where sid > #{sid}
		<if test="userName != null">
			and user_name = #{userName}
		</if>
	</select>
	  -->
	  
  	<select id="findAll" resultType="User" parameterType="User">
		select sid ,
		<if test="_databaseId == 'sqlite'">
			   user_name,
		</if>
			   group_name,
			   age,
			   remark
		from user 
			
		where sid >= #{sid}
		<if test="userName != null">
			and user_name = #{userName}
		</if>
	</select>
	
	<select id="findMin" resultType="User" parameterType="User">
		select min(sid) as sid from user
	</select>
	
	<select id="findCount" resultType="User" parameterType="User">
		select count(sid) as sid from user
	</select>
	
	<select id="findSum" resultType="User" parameterType="User">
		select sum(sid) as sid from user
	</select>
	
	<select id="findMulti" resultType="hashmap" parameterType="User">
		select max(sid) as max, min(sid) as min ,sum(sid) as sum,count(sid) as count from user
	</select>
	
	<select id="findOrderBy" resultType="User" parameterType="User">
		select sid , user_name as userName , group_name as groupName , age, remark from user order by age,group_name desc
	</select>
	
	<select id="findPage" resultType="User" parameterType="ParameterWrapper">
		select * from user where sid<![CDATA[>]]>#{baseParam.sid} order by age,group_name desc
	</select>
	
	<select id="findPageOffset" resultType="hashmap" parameterType="ParameterWrapper">
		select 
			count(*) as shard_page_offset 
		from user 
		where 
			( sid<![CDATA[>]]>#{baseParam.sid} ) 
			and 
			( ( age<![CDATA[<]]>#{extParam.age} ) or ( age<![CDATA[=]]>#{extParam.age} and group_name<![CDATA[>]]>#{extParam.groupName}) ) 
		
	</select>
</mapper>